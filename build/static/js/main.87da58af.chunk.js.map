{"version":3,"sources":["Helpers.js","List.js","Card.js","StatBlock.js","Creatures.js","App.js","serviceWorker.js","index.js"],"names":["apiCall","api_url","a","requestOptions","method","redirect","headers","Headers","fetch","then","res","json","result","localStorage","setItem","JSON","stringify","error","console","log","List","props","state","isLoaded","items","filter","setState","event","this","target","value","preventDefault","setCreature","currentTarget","getAttribute","message","list","creature","nom","toLowerCase","includes","map","item","Table","Row","key","id","onClick","handleCreatureClick","bind","data-id","active","Cell","nc","Header","as","Content","Subheader","milieu_naturel","colSpan","Loader","inverted","Input","icon","placeholder","type","onChange","handleFilterInputChange","basic","celled","collapsing","selectable","HeaderCell","width","Body","Component","Card","canvasRef","React","createRef","backgroundImgRef","templates","height","padding","smallSize","caracSize","textSize","titleSize","baseColor","accentColor","template","name","ctx","current","getContext","onload","drawImage","global_y","wrapText","details","push","categorie","taille","rang_de_boss","font","textAlign","join","displayCarac","DEF","PV","init","index","carac","caracteristiques","y","x","parseInt","caracteristiques_superieures","indexOf","attaques","atq","displayTitle","capacites_speciales","capacites","split","cap","length","ref","src","alt","hidden","className","href","text","save","fillStyle","letterSpace","toUpperCase","fillText","restore","label","color_label","color_value","String","fromCharCode","fontSize","lineHeight","maxWidth","replace","words","line","textBaseline","n","testLine","measureText","toDataURL","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","StatBlock","statblock","handleStatBlockChange","Form","TextArea","obj","premier","field","RegExp","statBlock","attributes","parseStatBlock","setCreatureFromStatBlock","maxAttack","statsReconnues","for","dex","con","int","sag","per","cha","niveau","profil","def","pv","rd","patternStats","buildRegexp","stats","rows","newAttrs","previousLine","previousContainsDM","lastPrefix","firstLine","forEach","row","trim","endsWith","search","currentRow","nomAttaqueFin","nomAttaque","substring","portee","exec","isNaN","bonusAtt","startsWith","specAtt","nbDe","de","bonusDM","dmExpr","indexDe","indexBonusDM","prefix","Math","random","lastMatch","lexemes","match","end","l","lstat","lattr","undefined","valAttr","substr","caracSlash","pvMax","caracParen","pvCourant","max_attack_label","Creatures","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.87da58af.chunk.js","sourcesContent":["export async function apiCall(api_url) {\r\n    // const cache = localStorage.getItem(api_url);\r\n    // if (cache) {\r\n    //     return JSON.parse(cache);\r\n    // }\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        redirect: 'follow',\r\n        headers: new Headers({\r\n            'key': 'ylPI5rutd4MESz4l'\r\n        })\r\n    };\r\n\r\n    return fetch(api_url, requestOptions)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                localStorage.setItem(api_url, JSON.stringify(result));\r\n                return result;\r\n            },\r\n            // Remarque : il est important de traiter les erreurs ici\r\n            // au lieu d'utiliser un bloc catch(), pour ne pas passer à la trappe\r\n            // des exceptions provenant de réels bugs du composant.\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n}","import React, { Component } from 'react';\r\nimport { Loader, Header, Table, Input } from 'semantic-ui-react'\r\nimport { apiCall } from './Helpers.js'\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            filter: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiCall('https://co-api.gimond.fr/api/v1/creatures').then((result) => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                items: result\r\n            });\r\n        });\r\n    }\r\n\r\n    handleFilterInputChange(event) {\r\n        this.setState({filter: event.target.value});\r\n    }\r\n\r\n    handleCreatureClick(event) {\r\n        event.preventDefault();\r\n        if (typeof this.props.setCreature === 'function') {\r\n            this.props.setCreature(event.currentTarget.getAttribute('data-id'));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else {\r\n            let list = '';\r\n            if (!isLoaded) {\r\n                list = <Table.Row><Table.Cell colSpan='2'><Loader inverted /></Table.Cell></Table.Row>;\r\n            } else {\r\n                let filtered = items.filter(creature => this.state.filter === '' || creature.nom.toLowerCase().includes(this.state.filter.toLowerCase()));\r\n                list = filtered.map(item => (\r\n                    <Table.Row key={item.id} onClick={this.handleCreatureClick.bind(this)} data-id={item.id} active={this.props.creature && this.props.creature.id === item.id} >\r\n                        <Table.Cell>\r\n                            {item.nc}\r\n                        </Table.Cell>\r\n                        <Table.Cell>\r\n                            <Header as='h4'>\r\n                                <Header.Content>\r\n                                    {item.nom}\r\n                                    <Header.Subheader>{item.milieu_naturel}</Header.Subheader>\r\n                                </Header.Content>\r\n                            </Header>\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                ));\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Input icon='search' placeholder='Rechercher...' value={this.state.filter} type=\"text\" onChange={this.handleFilterInputChange.bind(this)} />\r\n                    <Loader inverted />\r\n                    <Table basic='very' celled collapsing selectable>\r\n                        <Table.Header>\r\n                            <Table.Row>\r\n                                <Table.HeaderCell width={2}>NC</Table.HeaderCell>\r\n                                <Table.HeaderCell>Nom</Table.HeaderCell>\r\n                            </Table.Row>\r\n                        </Table.Header>\r\n\r\n                        <Table.Body>\r\n                            {list}\r\n                        </Table.Body>\r\n                    </Table>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default List;","import React, {useCallback, Component} from 'react';\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false\r\n        };\r\n        this.canvasRef = React.createRef();\r\n        this.backgroundImgRef = React.createRef();\r\n\r\n        this.templates = {\r\n            'modern': {\r\n                width: 360,\r\n                height: 600,\r\n                padding: 20,\r\n                smallSize: 10,\r\n                caracSize: 20,\r\n                textSize: 14,\r\n                titleSize: 14,\r\n                baseColor: '#08091f',\r\n                accentColor: '#df4a4a'\r\n            },\r\n            'classic': {\r\n                width: 360,\r\n                height: 600,\r\n                padding: 20,\r\n                smallSize: 10,\r\n                caracSize: 20,\r\n                textSize: 14,\r\n                titleSize: 14,\r\n                baseColor: '#08091f',\r\n                accentColor: '#df4a4a'\r\n            }\r\n        };\r\n        this.template = this.templates[this.props.template];\r\n        this.template.name = this.props.template;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.ctx = this.canvasRef.current.getContext(\"2d\");\r\n\r\n        this.backgroundImgRef.current.onload = () => {\r\n            this.ctx.drawImage(this.backgroundImgRef.current, 0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.creature) {\r\n            console.log(this.props.creature);\r\n            const creature = this.props.creature;\r\n            let global_y = this.template.padding;\r\n            this.ctx.drawImage(this.backgroundImgRef.current, 0, 0);\r\n\r\n            // NAME\r\n            global_y = this.wrapText(creature.nom, this.template.padding, global_y, 22, 22, this.template.width - this.template.padding * 2 - 120);\r\n\r\n            // DETAILS\r\n            global_y += 25;\r\n            let details = [];\r\n\r\n            if (creature.nc) details.push('NC ' + creature.nc);\r\n            // details.push('Milieu naturel : '+creature.milieu_naturel);\r\n            // details.push('archétype '+creature.archetype.toLowerCase());\r\n            if (creature.categorie) details.push('créature ' + creature.categorie.toLowerCase());\r\n            if (creature.taille) details.push('taille ' + creature.taille.toLowerCase());\r\n            if (creature.rang_de_boss) details.push('Boss rang ' + creature.rang_de_boss);\r\n\r\n            this.ctx.font = this.template.smallSize + \"px NexusSansOT\";\r\n            this.ctx.textAlign = \"left\";\r\n            global_y = this.wrapText(details.join(', '), this.template.padding, global_y, this.template.smallSize, this.template.smallSize*1.3, this.template.width - this.template.padding * 2 - 120);\r\n\r\n            // DEF, PV, Init\r\n            this.displayCarac('DEF', (creature.DEF?creature.DEF:'-'), this.template.width - 120, this.template.padding - 5, 'white', 'white');\r\n            this.displayCarac('PV', (creature.PV?creature.PV:'-'), this.template.width - 75, this.template.padding - 5, 'white', 'white');\r\n            this.displayCarac('Init', (creature.init?creature.init:'-'), this.template.width - 30, this.template.padding - 5, 'white', 'white');\r\n\r\n            // CARACS\r\n            let index = 1;\r\n            global_y += 35;\r\n            for (const carac in creature.caracteristiques) {\r\n                let y = global_y;\r\n                let x = (this.template.width) / 7 * index;\r\n                let value = creature.caracteristiques[carac];\r\n                value = parseInt(value);\r\n                if (value >= 0) {\r\n                    value = '+' + value;\r\n                }\r\n                this.displayCarac(' ' + carac + (creature.caracteristiques_superieures.indexOf(carac) !== -1 ? ' *' : ' '), value, x, y);\r\n                index++;\r\n            }\r\n            global_y += 20;\r\n\r\n            // ATQ\r\n            if (creature.attaques) {\r\n                global_y += 35;\r\n                this.displayTitle('Attaques', this.template.padding, global_y);\r\n                for (let atq in creature.attaques) {\r\n                    if (atq) {\r\n                        global_y += 20;\r\n                        global_y = this.wrapText(creature.attaques[atq], this.template.padding, global_y, this.template.textSize, 20);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // VOIES\r\n\r\n            // CAPS\r\n            if (creature.capacites_speciales) {\r\n                global_y += 30;\r\n                this.displayTitle('Capacités', this.template.padding, global_y);\r\n                global_y += 20;\r\n                var capacites = creature.capacites_speciales.split(/\\r?\\n/);\r\n                console.log(capacites);\r\n                for (let cap in capacites) {\r\n                    if (cap.length) {\r\n                        global_y = this.wrapText(cap, this.template.padding, global_y, this.template.textSize, 20);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else {\r\n            // this.ctx.font = \"30px NexusSansOT\";\r\n            // this.ctx.textAlign = \"center\";\r\n            // this.ctx.fillText(\"Sélectionnez une créature\", 0, 20);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {/*<this.Dropzone />*/}\r\n                <canvas ref={this.canvasRef} width={this.template.width} height={this.template.height}/>\r\n                <img ref={this.backgroundImgRef} src={\"images/background_\" + this.template.name + \".jpg\"} alt=\"\" hidden/>\r\n                <footer className=\"colophon\">\r\n                    <a href=\"https://www.freepik.com/free-photos-vectors/background\">Background photo created by aopsan - www.freepik.com</a>\r\n                    <a href=\"https://game-icons.net/1x1/caro-asercion/goblin.html\">Goblin icon by Caro Asercion</a>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    displayTitle(text, x, y) {\r\n        this.ctx.save();\r\n        this.ctx.font = \"bold \" + this.template.titleSize + \"px NexusSansOT\";\r\n        this.ctx.textAlign = \"left\";\r\n        this.ctx.fillStyle = this.template.accentColor;\r\n        text = this.letterSpace(text.toUpperCase());\r\n        this.ctx.fillText(text, x, y);\r\n        this.ctx.restore();\r\n    }\r\n\r\n    displayCarac(label, value, x, y, color_label, color_value) {\r\n        if (!color_label) {\r\n            color_label = this.template.accentColor;\r\n        }\r\n        if (!color_value) {\r\n            color_value = this.template.baseColor;\r\n        }\r\n        this.ctx.save();\r\n        this.ctx.font = \"bold \" + this.template.smallSize + \"px NexusSansOT\";\r\n        this.ctx.textAlign = \"center\";\r\n        this.ctx.fillStyle = color_label;\r\n        label = this.letterSpace(label.toUpperCase());\r\n        this.ctx.fillText(label, x, y);\r\n        this.ctx.font = this.template.caracSize + \"px NexusSansOT\";\r\n        this.ctx.fillStyle = color_value;\r\n        this.ctx.fillText(value, x, y + 12);\r\n        this.ctx.restore();\r\n        return y + 12;\r\n    }\r\n\r\n    letterSpace(text) {\r\n        text = text.split(\"\").join(String.fromCharCode(8202)); //8201 for bigger space\r\n        return text;\r\n    }\r\n\r\n    wrapText(text, x, y, fontSize, lineHeight, maxWidth) {\r\n        // strip tags\r\n        text = text.replace(/(<([^>]+)>)/ig, \"\");\r\n\r\n        if (!maxWidth) {\r\n            maxWidth = this.template.width - this.template.padding * 2;\r\n        }\r\n        var words = text.split(' ');\r\n        var line = '';\r\n        if (!lineHeight) {\r\n            lineHeight = fontSize * 1.286; // a good approx for 10-18px sizes\r\n        }\r\n\r\n        this.ctx.font = fontSize + \"px NexusSansOT\";\r\n        this.ctx.textBaseline = 'top';\r\n\r\n        for (var n = 0; n < words.length; n++) {\r\n            var testLine = line + words[n] + ' ';\r\n            var metrics = this.ctx.measureText(testLine);\r\n            var testWidth = metrics.width;\r\n            if (testWidth > maxWidth) {\r\n                this.ctx.fillText(line, x, y);\r\n                line = words[n] + ' ';\r\n                y += lineHeight;\r\n            } else {\r\n                line = testLine;\r\n            }\r\n        }\r\n        this.ctx.fillText(line, x, y);\r\n        return y;\r\n    }\r\n\r\n    saveImg() {\r\n        this.canvasRef.current.toDataURL();\r\n    }\r\n\r\n    Dropzone() {\r\n        const onDrop = useCallback(acceptedFiles => {\r\n            // Do something with the files\r\n            console.log(acceptedFiles);\r\n        }, []);\r\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\r\n\r\n        return (\r\n            <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                        <p>Drop the files here ...</p> :\r\n                        <p>Drag 'n' drop some files here, or click to select files</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\r\nimport {Form, TextArea} from 'semantic-ui-react'\r\n\r\nclass StatBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statblock: 'Mandefer - Cuirasse du dragon\\n' +\r\n                'Boss rang 4\\n' +\r\n                'NC 8\\n' +\r\n                'FOR +4* DEX +0 CON +3\\n' +\r\n                'INT +2 SAG +0 CHA +0\\n' +\r\n                'DEF 25 PV 125 Init 10\\n' +\r\n                'Hache (2 attaque) +14 DM 2d6+13'\r\n        };\r\n        this.handleStatBlockChange = this.handleStatBlockChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return <Form><TextArea value={this.state.statblock} onChange={this.handleStatBlockChange.bind(this)}/></Form>;\r\n    }\r\n\r\n    buildRegexp(obj) {\r\n        var res = \"\\\\b(\";\r\n        var premier = true;\r\n        for (var field in obj) {\r\n            if (premier) {\r\n                res += field;\r\n                premier = false;\r\n            } else {\r\n                res += \"|\" + field;\r\n            }\r\n        }\r\n        res += \"|créature)\\\\b\"; //pour la version accentuée\r\n        return new RegExp(res, 'gi');\r\n    }\r\n\r\n    handleStatBlockChange(event) {\r\n        const statBlock = event.target.value;\r\n        this.setState({statblock: statBlock});\r\n        let attributes = this.parseStatBlock(statBlock);\r\n        if (typeof this.props.setCreatureFromStatBlock === 'function') {\r\n            this.props.setCreatureFromStatBlock(attributes);\r\n        }\r\n    }\r\n\r\n    parseStatBlock(statBlock) {\r\n        var maxAttack = 0;\r\n        var statsReconnues = {\r\n            for: 'FOR',\r\n            dex: 'DEX',\r\n            con: 'CON',\r\n            int: 'INT',\r\n            sag: 'SAG',\r\n            per: 'SAG',\r\n            cha: 'CHA',\r\n            creature: 'profil',\r\n            nc: 'nc',\r\n            niveau: 'nc',\r\n            taille: 'taille',\r\n            profil: 'profil',\r\n            init: 'init',\r\n            def: 'DEF',\r\n            pv: 'PV',\r\n            rd: 'RD',\r\n        };\r\n        var patternStats = this.buildRegexp(statsReconnues);\r\n\r\n        if (statBlock === '') {\r\n            return;\r\n        }\r\n        let stats = statBlock.replace(/\\r/g, '');\r\n        //On enlève les caractères images des dernières versions de COF\r\n        stats = stats.replace(/\\ue1e9/g, ''); //DEF\r\n        stats = stats.replace(/♥/g, ''); //PV\r\n        stats = stats.replace(/\\ue0bf/g, ''); //Attaque\r\n        // stats = stats.replace(/\\, /g, ' ');\r\n        var rows = stats.split(/\\n/);\r\n        var newAttrs = {};\r\n        var previousLine = ''; //Au cas d'attaque sur plusieurs lignes\r\n        var previousContainsDM = false;\r\n        var lastPrefix = ''; //Pour les suites d'attaque sur la ligne suivante\r\n        var firstLine = true; //si la première ligne ne correspond à rien, c'est le nom\r\n        rows.forEach(function (row) {\r\n            if (row === '') {\r\n                previousLine = '';\r\n                lastPrefix = '';\r\n                firstLine = false;\r\n                previousContainsDM = false;\r\n                return;\r\n            }\r\n            row = row.trim();\r\n            if (row.endsWith('DM')) {\r\n                previousLine += row + ' ';\r\n                previousContainsDM = true;\r\n            } else if (previousContainsDM || row.search(/\\bDM\\b/i) >= 0) { //Attaque\r\n                var currentRow = previousLine + row;\r\n                var nomAttaqueFin = currentRow.search(/\\s(\\+\\d+|0\\b|DM)/i);\r\n                var nomAttaque = currentRow.substring(0, nomAttaqueFin);\r\n                var portee = /\\(\\d+\\s*m\\)/i.exec(nomAttaque);\r\n                if (portee) {\r\n                    nomAttaque = nomAttaque.substring(0, portee.index).trim();\r\n                    portee = parseInt(portee[0].substring(1));\r\n                    if (isNaN(portee)) portee = 0;\r\n                }\r\n                currentRow = currentRow.substring(nomAttaqueFin).trim();\r\n                var bonusAtt = 0;\r\n                if (currentRow.startsWith('+')) {\r\n                    currentRow = currentRow.substring(1);\r\n                    bonusAtt = parseInt(currentRow);\r\n                    if (isNaN(bonusAtt)) {\r\n                        console.log(\"Sheet worker: bonus d'attaque incorrect \" + row);\r\n                        previousLine = '';\r\n                        return;\r\n                    }\r\n                    currentRow = currentRow.substring(currentRow.search(/\\D/));\r\n                } else if (currentRow.startsWith('0')) {\r\n                    currentRow = currentRow.substring(1).trim();\r\n                }\r\n                var index = currentRow.search(/\\bDM\\b/i);\r\n                var specAtt = currentRow.substring(0, index);\r\n                currentRow = currentRow.substring(index + 3).trim();\r\n                index = currentRow.search(/\\s/);\r\n                if (index < 0) {\r\n                    index = currentRow.length;\r\n                }\r\n                var nbDe = 0;\r\n                var de = 4;\r\n                var bonusDM = 0;\r\n                var dmExpr = currentRow.substring(0, index);\r\n                var indexDe = dmExpr.search(/d/i);\r\n                if (indexDe < 0) {\r\n                    bonusDM = parseInt(dmExpr);\r\n                    if (isNaN(bonusDM)) {\r\n                        console.log(\"Impossible de trouver les DM dans \" + row);\r\n                        previousLine += row + ' ';\r\n                        previousContainsDM = true;\r\n                        return;\r\n                    }\r\n                } else {\r\n                    nbDe = parseInt(dmExpr.substring(0, indexDe));\r\n                    dmExpr = dmExpr.substring(indexDe + 1);\r\n                    de = parseInt(dmExpr);\r\n                    if (isNaN(bonusDM) || isNaN(de)) {\r\n                        console.log(\"Impossible de trouver les DM dans \" + row);\r\n                        previousLine += row + ' ';\r\n                        previousContainsDM = true;\r\n                        return;\r\n                    }\r\n                    var indexBonusDM = dmExpr.search(/(\\+|-)/);\r\n                    if (indexBonusDM >= 0) {\r\n                        bonusDM = parseInt(dmExpr.substring(indexBonusDM));\r\n                        if (isNaN(bonusDM)) {\r\n                            bonusDM = 0;\r\n                        }\r\n                    } else if (index > 0 && index < currentRow.length - 1) {\r\n                        currentRow = currentRow.substring(index).trim();\r\n                        index = 0;\r\n                        if (currentRow.startsWith('+') || currentRow.startsWith('-')) {\r\n                            bonusDM = parseInt(currentRow);\r\n                            if (isNaN(bonusDM)) {\r\n                                bonusDM = 0;\r\n                            } else index = currentRow.search(/\\s/);\r\n                        }\r\n                    }\r\n                }\r\n                if (index >= 0 && index < currentRow.length - 1) {\r\n                    specAtt += currentRow.substring(index).trim();\r\n                }\r\n\r\n                var prefix = 'repeating_pnjatk_' + Math.random() + '_arme';\r\n                maxAttack++;\r\n                // newAttrs[prefix + 'label'] = maxAttack;\r\n                // newAttrs[prefix + 'nom'] = nomAttaque;\r\n                // newAttrs[prefix + 'atk'] = bonusAtt;\r\n                // newAttrs[prefix + 'dmnbde'] = nbDe;\r\n                // newAttrs[prefix + 'dmde'] = de;\r\n                // newAttrs[prefix + 'dm'] = bonusDM;\r\n                // newAttrs[prefix + 'spec'] = specAtt;\r\n                // if (portee) newAttrs[prefix + 'portee'] = portee;\r\n\r\n                if (!newAttrs.attaques) {\r\n                    newAttrs.attaques = [];\r\n                }\r\n                newAttrs.attaques.push(\r\n                    nomAttaque + ' +' + bonusAtt + ' DM ' + nbDe + 'd' + de + (bonusDM ? '+' + bonusDM : '') + ' ' + specAtt\r\n                );\r\n\r\n                lastPrefix = prefix;\r\n                previousContainsDM = false;\r\n                previousLine = '';\r\n            } else if (row.startsWith('+') && lastPrefix !== '') {\r\n                newAttrs[lastPrefix + 'spec'] += row;\r\n            } else { //Pas attaque\r\n                lastPrefix = '';\r\n                var lexemes = [];\r\n                var lastMatch;\r\n                var match = patternStats.exec(row);\r\n                while (match) {\r\n                    if (lastMatch) {\r\n                        lexemes.push({\r\n                            match: lastMatch,\r\n                            end: match.index\r\n                        });\r\n                    }\r\n                    lastMatch = match;\r\n                    match = patternStats.exec(row);\r\n                }\r\n                if (lastMatch) {\r\n                    lexemes.push({\r\n                        match: lastMatch,\r\n                        end: row.length\r\n                    });\r\n                }\r\n                if (lexemes.length === 0) {\r\n                    if (firstLine) {\r\n                        newAttrs.nom = row;\r\n                    } else {\r\n                        console.log(\"La ligne \" + row + \" ne correspond à rien\");\r\n                        previousLine = row + ' ';\r\n                    }\r\n                } else previousLine = '';\r\n                lexemes.forEach(function (l) {\r\n                    var lstat = l.match[0].toLowerCase();\r\n                    var lattr = statsReconnues[lstat];\r\n                    if (lattr === undefined && lstat === 'créature') lattr = statsReconnues.creature;\r\n                    if (lattr === undefined) {\r\n                        console.log(\"Erreur ! Pattern \" + lstat + \" non reconne. La ligne était \" + l);\r\n                        return;\r\n                    }\r\n                    var valAttr = row.substring(l.match.index + lstat.length, l.end).trim();\r\n                    valAttr = valAttr.replace(/\\)$/, '');\r\n                    console.log(lattr);\r\n                    if (lattr.search(/(FOR|DEX|CON|SAG|INT|CHA)/) !== -1) {\r\n                        if (valAttr.endsWith('*')) {\r\n                            valAttr = valAttr.substr(0, valAttr.length - 1);\r\n                            if (!newAttrs.caracteristiques_superieures) {\r\n                                newAttrs.caracteristiques_superieures = [];\r\n                            }\r\n                            newAttrs.caracteristiques_superieures.push(lattr);\r\n                        }\r\n                        //cas où le statblock donne valeur/bonus\r\n                        var caracSlash = valAttr.indexOf('/');\r\n                        if (caracSlash > 0) {\r\n                            // var caracVal = parseInt(valAttr);\r\n                            valAttr = parseInt(valAttr.substring(caracSlash + 1));\r\n                        } else {\r\n                            valAttr = parseInt(valAttr);\r\n                        }\r\n                        if (!newAttrs.caracteristiques) {\r\n                            newAttrs.caracteristiques = [];\r\n                        }\r\n                        newAttrs.caracteristiques[lattr] = valAttr;\r\n                    } else if (lattr === 'pnj_pv_max') {\r\n                        //On met aussi les pv courants à jour\r\n                        var pvMax = parseInt(valAttr);\r\n                        //Cas où on note entre parenhèse les PV courants\r\n                        var caracParen = valAttr.indexOf('(');\r\n                        if (caracParen > 0) {\r\n                            var pvCourant = parseInt(valAttr.substring(caracParen + 1));\r\n                            newAttrs.PV = pvCourant;\r\n                            valAttr = valAttr.substring(0, caracParen).trim();\r\n                        } else newAttrs.PV = pvMax;\r\n                    }\r\n                    newAttrs[lattr] = valAttr;\r\n                });\r\n            }\r\n            firstLine = false;\r\n        });\r\n        newAttrs.max_attack_label = maxAttack;\r\n\r\n        return newAttrs;\r\n    }\r\n}\r\n\r\nexport default StatBlock;","import React, {Component} from 'react';\r\nimport List from './List.js';\r\nimport Card from './Card.js';\r\nimport StatBlock from './StatBlock.js';\r\nimport { apiCall } from './Helpers.js'\r\n\r\nclass Creatures extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            creature: null\r\n        };\r\n    }\r\n\r\n    setCreature(id) {\r\n        apiCall(\"https://co-api.gimond.fr/api/v1/creatures?id=\"+id).then((result) => {\r\n            const creature = result[0];\r\n            this.setState({\r\n                isLoaded: true,\r\n                creature: creature\r\n            });\r\n        });\r\n    }\r\n\r\n    setCreatureFromStatBlock(creature) {\r\n        this.setState({\r\n            isLoaded: true,\r\n            creature: creature\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"App-header\">\r\n                    Créatures\r\n                </header>\r\n                <div className=\"content\">\r\n                    <div className=\"col left\">\r\n                        <StatBlock setCreatureFromStatBlock={this.setCreatureFromStatBlock.bind(this)} />\r\n                        <List setCreature={this.setCreature.bind(this)} creature={this.state.creature} />\r\n                    </div>\r\n                    <div className=\"col right\">\r\n                        <Card template='modern' creature={this.state.creature} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Creatures;","import React from 'react';\nimport Creatures from './Creatures.js';\n// import logo from './logo.svg';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Creatures />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}